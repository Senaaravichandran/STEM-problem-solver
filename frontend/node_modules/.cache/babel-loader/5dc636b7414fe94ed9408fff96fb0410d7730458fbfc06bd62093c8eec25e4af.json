{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\CP Problem Solver\\\\frontend\\\\src\\\\components\\\\VoiceInputButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Mic, MicOff } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInputButton = ({\n  onTranscription,\n  isLoading\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioLevel, setAudioLevel] = useState(0);\n  const [error, setError] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const startRecording = async () => {\n    try {\n      setError(null);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n\n      // Set up audio level monitoring\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n      analyserRef.current.fftSize = 256;\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      const updateAudioLevel = () => {\n        if (analyserRef.current && isRecording) {\n          analyserRef.current.getByteFrequencyData(dataArray);\n          const average = dataArray.reduce((acc, val) => acc + val, 0) / bufferLength;\n          setAudioLevel(average / 255);\n          animationFrameRef.current = requestAnimationFrame(updateAudioLevel);\n        }\n      };\n      updateAudioLevel();\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n\n        // Convert to base64\n        const reader = new FileReader();\n        reader.onloadend = async () => {\n          const base64Audio = reader.result.split(',')[1];\n          try {\n            const response = await fetch('http://localhost:5000/api/transcribe-audio', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                audio: base64Audio,\n                format: 'wav'\n              })\n            });\n            if (!response.ok) {\n              throw new Error('Transcription failed');\n            }\n            const result = await response.json();\n            if (result.success && result.transcript) {\n              onTranscription(result.transcript);\n            } else {\n              setError('No speech detected. Please try again.');\n            }\n          } catch (err) {\n            console.error('Transcription error:', err);\n            setError('Failed to transcribe audio. Please try again.');\n          }\n        };\n        reader.readAsDataURL(audioBlob);\n\n        // Clean up\n        stream.getTracks().forEach(track => track.stop());\n        if (audioContextRef.current) {\n          audioContextRef.current.close();\n        }\n        if (animationFrameRef.current) {\n          cancelAnimationFrame(animationFrameRef.current);\n        }\n        setAudioLevel(0);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error('Error starting recording:', err);\n      setError('Failed to access microphone. Please check permissions.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const toggleRecording = () => {\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRecording,\n      disabled: isLoading,\n      className: `p-2 rounded-lg transition-all duration-200 flex items-center justify-center ${isRecording ? 'bg-red-500 hover:bg-red-600 text-white shadow-lg' : 'bg-blue-500 hover:bg-blue-600 text-white shadow-md'} ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`,\n      title: isRecording ? 'Stop recording' : 'Start voice input',\n      children: isRecording ? /*#__PURE__*/_jsxDEV(MicOff, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute -top-1 -right-1 w-3 h-3 rounded-full bg-red-500 animate-pulse\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full rounded-full bg-red-400 transition-transform duration-100\",\n        style: {\n          transform: `scale(${1 + audioLevel})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-full left-0 mt-2 p-2 bg-red-100 border border-red-300 rounded-lg text-sm text-red-700 whitespace-nowrap z-10\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        className: \"ml-2 text-red-500 hover:text-red-700\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInputButton, \"8v6EWSQGdfq+g5ON8qZsZ2twi1M=\");\n_c = VoiceInputButton;\nexport default VoiceInputButton;\nvar _c;\n$RefreshReg$(_c, \"VoiceInputButton\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Mic","MicOff","jsxDEV","_jsxDEV","VoiceInputButton","onTranscription","isLoading","_s","isRecording","setIsRecording","audioLevel","setAudioLevel","error","setError","mediaRecorderRef","audioChunksRef","audioContextRef","analyserRef","animationFrameRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","window","AudioContext","webkitAudioContext","createAnalyser","source","createMediaStreamSource","connect","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","updateAudioLevel","getByteFrequencyData","average","reduce","acc","val","requestAnimationFrame","MediaRecorder","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","reader","FileReader","onloadend","base64Audio","result","split","response","fetch","method","headers","body","JSON","stringify","format","ok","Error","json","success","transcript","err","console","readAsDataURL","getTracks","forEach","track","stop","close","cancelAnimationFrame","start","stopRecording","toggleRecording","className","children","onClick","disabled","title","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/CP Problem Solver/frontend/src/components/VoiceInputButton.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Mic, MicOff } from 'lucide-react';\r\n\r\nconst VoiceInputButton = ({ onTranscription, isLoading }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [audioLevel, setAudioLevel] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const animationFrameRef = useRef(null);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      setError(null);\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      \r\n      // Set up audio level monitoring\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      source.connect(analyserRef.current);\r\n      \r\n      analyserRef.current.fftSize = 256;\r\n      const bufferLength = analyserRef.current.frequencyBinCount;\r\n      const dataArray = new Uint8Array(bufferLength);\r\n      \r\n      const updateAudioLevel = () => {\r\n        if (analyserRef.current && isRecording) {\r\n          analyserRef.current.getByteFrequencyData(dataArray);\r\n          const average = dataArray.reduce((acc, val) => acc + val, 0) / bufferLength;\r\n          setAudioLevel(average / 255);\r\n          animationFrameRef.current = requestAnimationFrame(updateAudioLevel);\r\n        }\r\n      };\r\n      \r\n      updateAudioLevel();\r\n\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      audioChunksRef.current = [];\r\n\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          audioChunksRef.current.push(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\r\n        \r\n        // Convert to base64\r\n        const reader = new FileReader();\r\n        reader.onloadend = async () => {\r\n          const base64Audio = reader.result.split(',')[1];\r\n          \r\n          try {\r\n            const response = await fetch('http://localhost:5000/api/transcribe-audio', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                audio: base64Audio,\r\n                format: 'wav'\r\n              }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n              throw new Error('Transcription failed');\r\n            }\r\n\r\n            const result = await response.json();\r\n            if (result.success && result.transcript) {\r\n              onTranscription(result.transcript);\r\n            } else {\r\n              setError('No speech detected. Please try again.');\r\n            }\r\n          } catch (err) {\r\n            console.error('Transcription error:', err);\r\n            setError('Failed to transcribe audio. Please try again.');\r\n          }\r\n        };\r\n        reader.readAsDataURL(audioBlob);\r\n\r\n        // Clean up\r\n        stream.getTracks().forEach(track => track.stop());\r\n        if (audioContextRef.current) {\r\n          audioContextRef.current.close();\r\n        }\r\n        if (animationFrameRef.current) {\r\n          cancelAnimationFrame(animationFrameRef.current);\r\n        }\r\n        setAudioLevel(0);\r\n      };\r\n\r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n    } catch (err) {\r\n      console.error('Error starting recording:', err);\r\n      setError('Failed to access microphone. Please check permissions.');\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const toggleRecording = () => {\r\n    if (isRecording) {\r\n      stopRecording();\r\n    } else {\r\n      startRecording();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={toggleRecording}\r\n        disabled={isLoading}\r\n        className={`p-2 rounded-lg transition-all duration-200 flex items-center justify-center ${\r\n          isRecording\r\n            ? 'bg-red-500 hover:bg-red-600 text-white shadow-lg'\r\n            : 'bg-blue-500 hover:bg-blue-600 text-white shadow-md'\r\n        } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n        title={isRecording ? 'Stop recording' : 'Start voice input'}\r\n      >\r\n        {isRecording ? (\r\n          <MicOff className=\"w-4 h-4\" />\r\n        ) : (\r\n          <Mic className=\"w-4 h-4\" />\r\n        )}\r\n      </button>\r\n\r\n      {/* Audio level indicator */}\r\n      {isRecording && (\r\n        <div className=\"absolute -top-1 -right-1 w-3 h-3 rounded-full bg-red-500 animate-pulse\">\r\n          <div \r\n            className=\"w-full h-full rounded-full bg-red-400 transition-transform duration-100\"\r\n            style={{ transform: `scale(${1 + audioLevel})` }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Error display */}\r\n      {error && (\r\n        <div className=\"absolute top-full left-0 mt-2 p-2 bg-red-100 border border-red-300 rounded-lg text-sm text-red-700 whitespace-nowrap z-10\">\r\n          {error}\r\n          <button\r\n            onClick={() => setError(null)}\r\n            className=\"ml-2 text-red-500 hover:text-red-700\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceInputButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}