{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = (process.env.REACT_APP_API_URL || 'http://localhost:5000') + '/api';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 60000,\n  // 60 seconds timeout\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napiClient.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.baseURL}${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napiClient.interceptors.response.use(response => {\n  console.log('API Response:', response.status, response.statusText);\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    message: error.message\n  });\n  return Promise.reject(error);\n});\nexport const ApiService = {\n  // Problem solving\n  async solveProblem(problemData) {\n    try {\n      const response = await apiClient.post('/solve', problemData);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to solve problem');\n    }\n  },\n  // Concept explanation\n  async explainConcept(conceptData) {\n    try {\n      const response = await apiClient.post('/explain', conceptData);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to explain concept');\n    }\n  },\n  // Formula reference\n  async getFormulas(formulaData) {\n    try {\n      const response = await apiClient.post('/formulas', formulaData);\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Failed to get formulas');\n    }\n  },\n  // Study tips\n  async getStudyTips(studyData) {\n    try {\n      const response = await apiClient.post('/study-tips', studyData);\n      return response.data;\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || 'Failed to get study tips');\n    }\n  },\n  // Search problems\n  async searchProblems(searchData) {\n    try {\n      const response = await apiClient.post('/search-problems', searchData);\n      return response.data;\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.error) || 'Failed to search problems');\n    }\n  },\n  // Get available datasets\n  async getDatasets() {\n    try {\n      const response = await apiClient.get('/datasets');\n      return response.data;\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      throw new Error(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.error) || 'Failed to get datasets');\n    }\n  },\n  // Health check\n  async healthCheck() {\n    try {\n      const healthUrl = (process.env.REACT_APP_API_URL || 'http://localhost:5000') + '/health';\n      const response = await axios.get(healthUrl);\n      return response.data;\n    } catch (error) {\n      throw new Error('API health check failed');\n    }\n  }\n};\nexport default ApiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","statusText","_error$response","_error$response2","_error$response3","data","message","ApiService","solveProblem","problemData","post","_error$response4","_error$response4$data","Error","explainConcept","conceptData","_error$response5","_error$response5$data","getFormulas","formulaData","_error$response6","_error$response6$data","getStudyTips","studyData","_error$response7","_error$response7$data","searchProblems","searchData","_error$response8","_error$response8$data","getDatasets","get","_error$response9","_error$response9$data","healthCheck","healthUrl"],"sources":["C:/Users/DELL/OneDrive/Desktop/CP Problem Solver/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = (process.env.REACT_APP_API_URL || 'http://localhost:5000') + '/api';\r\n\r\n// Create axios instance with default config\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000, // 60 seconds timeout\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.baseURL}${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    console.log('API Response:', response.status, response.statusText);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      data: error.response?.data,\r\n      message: error.message\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const ApiService = {\r\n  // Problem solving\r\n  async solveProblem(problemData) {\r\n    try {\r\n      const response = await apiClient.post('/solve', problemData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.error || 'Failed to solve problem');\r\n    }\r\n  },\r\n\r\n  // Concept explanation\r\n  async explainConcept(conceptData) {\r\n    try {\r\n      const response = await apiClient.post('/explain', conceptData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.error || 'Failed to explain concept');\r\n    }\r\n  },\r\n\r\n  // Formula reference\r\n  async getFormulas(formulaData) {\r\n    try {\r\n      const response = await apiClient.post('/formulas', formulaData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.error || 'Failed to get formulas');\r\n    }\r\n  },\r\n\r\n  // Study tips\r\n  async getStudyTips(studyData) {\r\n    try {\r\n      const response = await apiClient.post('/study-tips', studyData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.error || 'Failed to get study tips');\r\n    }\r\n  },\r\n\r\n  // Search problems\r\n  async searchProblems(searchData) {\r\n    try {\r\n      const response = await apiClient.post('/search-problems', searchData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.error || 'Failed to search problems');\r\n    }\r\n  },\r\n\r\n  // Get available datasets\r\n  async getDatasets() {\r\n    try {\r\n      const response = await apiClient.get('/datasets');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.error || 'Failed to get datasets');\r\n    }\r\n  },\r\n\r\n  // Health check\r\n  async healthCheck() {\r\n    try {\r\n      const healthUrl = (process.env.REACT_APP_API_URL || 'http://localhost:5000') + '/health';\r\n      const response = await axios.get(healthUrl);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('API health check failed');\r\n    }\r\n  },\r\n};\r\n\r\nexport default ApiService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}