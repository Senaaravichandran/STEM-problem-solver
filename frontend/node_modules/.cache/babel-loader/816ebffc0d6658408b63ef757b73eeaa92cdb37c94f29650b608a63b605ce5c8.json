{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\CP Problem Solver\\\\frontend\\\\src\\\\components\\\\VoiceInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Mic, MicOff, VolumeX, Volume2, Settings } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  onTranscription,\n  isLoading = false,\n  disabled = false\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioLevel, setAudioLevel] = useState(0);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [error, setError] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const streamRef = useRef(null);\n  const intervalRef = useRef(null);\n  const animationRef = useRef(null);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    const cleanup = () => {\n      if (mediaRecorderRef.current && isRecording) {\n        mediaRecorderRef.current.stop();\n        setIsRecording(false);\n      }\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n    return cleanup;\n  }, [isRecording]);\n\n  // Audio level monitoring\n  const monitorAudioLevel = () => {\n    if (!analyserRef.current) return;\n    const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\n    analyserRef.current.getByteFrequencyData(dataArray);\n    const average = dataArray.reduce((sum, value) => sum + value, 0) / dataArray.length;\n    setAudioLevel(Math.min(100, average / 255 * 100));\n    animationRef.current = requestAnimationFrame(monitorAudioLevel);\n  };\n  const startRecording = async () => {\n    try {\n      setError('');\n      setRecordingTime(0);\n\n      // Request microphone access\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n          sampleRate: 16000\n        }\n      });\n      streamRef.current = stream;\n\n      // Set up audio analysis\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n      analyserRef.current.fftSize = 256;\n\n      // Set up media recorder\n      mediaRecorderRef.current = new MediaRecorder(stream, {\n        mimeType: 'audio/webm;codecs=opus'\n      });\n      const audioChunks = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunks.push(event.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/webm'\n        });\n        await processAudio(audioBlob);\n      };\n\n      // Start recording\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n\n      // Start monitoring\n      monitorAudioLevel();\n\n      // Start timer\n      intervalRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (err) {\n      console.error('Error starting recording:', err);\n      setError('Could not access microphone. Please check permissions.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n\n      // Cleanup\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      setAudioLevel(0);\n    }\n  };\n  const processAudio = async audioBlob => {\n    try {\n      setIsProcessing(true);\n\n      // Convert blob to base64\n      const reader = new FileReader();\n      reader.readAsDataURL(audioBlob);\n      reader.onloadend = async () => {\n        const base64Audio = reader.result.split(',')[1];\n        try {\n          const response = await fetch('/api/transcribe-audio', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              audio: base64Audio,\n              options: {\n                model: 'nova-2',\n                language: 'en-US',\n                punctuate: true,\n                smart_format: true\n              }\n            })\n          });\n          const result = await response.json();\n          if (result.success) {\n            onTranscription({\n              transcript: result.transcript,\n              confidence: result.confidence,\n              enhancementApplied: result.enhancement_applied,\n              metadata: result.metadata\n            });\n          } else {\n            setError(result.error || 'Transcription failed');\n          }\n        } catch (error) {\n          console.error('Transcription error:', error);\n          setError('Failed to transcribe audio. Please try again.');\n        } finally {\n          setIsProcessing(false);\n        }\n      };\n    } catch (error) {\n      console.error('Audio processing error:', error);\n      setError('Failed to process audio. Please try again.');\n      setIsProcessing(false);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getAudioLevelColor = () => {\n    if (audioLevel < 30) return 'bg-green-500';\n    if (audioLevel < 70) return 'bg-yellow-500';\n    return 'bg-red-500';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4 p-4 bg-white dark:bg-slate-800 rounded-lg border border-slate-200 dark:border-slate-700 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isRecording ? stopRecording : startRecording,\n        disabled: disabled || isLoading || isProcessing,\n        className: `\n            relative p-4 rounded-full transition-all duration-200 transform\n            ${isRecording ? 'bg-red-500 hover:bg-red-600 scale-110 animate-pulse' : 'bg-blue-500 hover:bg-blue-600 hover:scale-105'}\n            ${disabled || isLoading || isProcessing ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n            text-white shadow-lg hover:shadow-xl\n          `,\n        children: isRecording ? /*#__PURE__*/_jsxDEV(MicOff, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this) : isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin w-6 h-6 border-2 border-white border-t-transparent rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: [isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 bg-red-500 rounded-full animate-pulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-slate-700 dark:text-slate-300\",\n              children: [\"Recording: \", formatTime(recordingTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(VolumeX, {\n              size: 16,\n              className: \"text-slate-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 h-2 bg-slate-200 dark:bg-slate-600 rounded-full overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `h-full transition-all duration-100 ${getAudioLevelColor()}`,\n                style: {\n                  width: `${audioLevel}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Volume2, {\n              size: 16,\n              className: \"text-slate-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-slate-600 dark:text-slate-400\",\n            children: \"Processing audio...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), !isRecording && !isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-slate-600 dark:text-slate-400\",\n          children: \"Click the microphone to start voice input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-xs text-slate-500 dark:text-slate-400\",\n        children: [/*#__PURE__*/_jsxDEV(Settings, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Enhanced with LJ Speech\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-red-600 dark:text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-xs text-slate-500 dark:text-slate-400\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2022 Speak clearly and at normal volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2022 Enhanced with 13,101 speech training samples\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2022 Automatic noise reduction and smart formatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"ovTfbt5jaYc8vGHWROO9NdBuavM=\");\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Mic","MicOff","VolumeX","Volume2","Settings","jsxDEV","_jsxDEV","VoiceInput","onTranscription","isLoading","disabled","_s","isRecording","setIsRecording","audioLevel","setAudioLevel","recordingTime","setRecordingTime","error","setError","isProcessing","setIsProcessing","mediaRecorderRef","audioContextRef","analyserRef","streamRef","intervalRef","animationRef","cleanup","current","stop","getTracks","forEach","track","clearInterval","cancelAnimationFrame","close","monitorAudioLevel","dataArray","Uint8Array","frequencyBinCount","getByteFrequencyData","average","reduce","sum","value","length","Math","min","requestAnimationFrame","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","sampleRate","window","AudioContext","webkitAudioContext","createAnalyser","source","createMediaStreamSource","connect","fftSize","MediaRecorder","mimeType","audioChunks","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","processAudio","start","setInterval","prev","err","console","stopRecording","reader","FileReader","readAsDataURL","onloadend","base64Audio","result","split","response","fetch","method","headers","body","JSON","stringify","options","model","language","punctuate","smart_format","json","success","transcript","confidence","enhancementApplied","enhancement_applied","metadata","formatTime","seconds","mins","floor","secs","toString","padStart","getAudioLevelColor","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/CP Problem Solver/frontend/src/components/VoiceInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Mic, MicOff, VolumeX, Volume2, Settings } from 'lucide-react';\r\n\r\nconst VoiceInput = ({ onTranscription, isLoading = false, disabled = false }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [audioLevel, setAudioLevel] = useState(0);\r\n  const [recordingTime, setRecordingTime] = useState(0);\r\n  const [error, setError] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  \r\n  const mediaRecorderRef = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const streamRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    const cleanup = () => {\r\n      if (mediaRecorderRef.current && isRecording) {\r\n        mediaRecorderRef.current.stop();\r\n        setIsRecording(false);\r\n      }\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n\r\n    return cleanup;\r\n  }, [isRecording]);\r\n\r\n  // Audio level monitoring\r\n  const monitorAudioLevel = () => {\r\n    if (!analyserRef.current) return;\r\n\r\n    const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\r\n    analyserRef.current.getByteFrequencyData(dataArray);\r\n    \r\n    const average = dataArray.reduce((sum, value) => sum + value, 0) / dataArray.length;\r\n    setAudioLevel(Math.min(100, (average / 255) * 100));\r\n    \r\n    animationRef.current = requestAnimationFrame(monitorAudioLevel);\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      setError('');\r\n      setRecordingTime(0);\r\n      \r\n      // Request microphone access\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        audio: {\r\n          echoCancellation: true,\r\n          noiseSuppression: true,\r\n          autoGainControl: true,\r\n          sampleRate: 16000\r\n        } \r\n      });\r\n      \r\n      streamRef.current = stream;\r\n\r\n      // Set up audio analysis\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      source.connect(analyserRef.current);\r\n      analyserRef.current.fftSize = 256;\r\n\r\n      // Set up media recorder\r\n      mediaRecorderRef.current = new MediaRecorder(stream, {\r\n        mimeType: 'audio/webm;codecs=opus'\r\n      });\r\n\r\n      const audioChunks = [];\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          audioChunks.push(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });\r\n        await processAudio(audioBlob);\r\n      };\r\n\r\n      // Start recording\r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n      \r\n      // Start monitoring\r\n      monitorAudioLevel();\r\n      \r\n      // Start timer\r\n      intervalRef.current = setInterval(() => {\r\n        setRecordingTime(prev => prev + 1);\r\n      }, 1000);\r\n\r\n    } catch (err) {\r\n      console.error('Error starting recording:', err);\r\n      setError('Could not access microphone. Please check permissions.');\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n      \r\n      // Cleanup\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n      \r\n      setAudioLevel(0);\r\n    }\r\n  };\r\n\r\n  const processAudio = async (audioBlob) => {\r\n    try {\r\n      setIsProcessing(true);\r\n      \r\n      // Convert blob to base64\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(audioBlob);\r\n      \r\n      reader.onloadend = async () => {\r\n        const base64Audio = reader.result.split(',')[1];\r\n        \r\n        try {\r\n          const response = await fetch('/api/transcribe-audio', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              audio: base64Audio,\r\n              options: {\r\n                model: 'nova-2',\r\n                language: 'en-US',\r\n                punctuate: true,\r\n                smart_format: true\r\n              }\r\n            }),\r\n          });\r\n\r\n          const result = await response.json();\r\n          \r\n          if (result.success) {\r\n            onTranscription({\r\n              transcript: result.transcript,\r\n              confidence: result.confidence,\r\n              enhancementApplied: result.enhancement_applied,\r\n              metadata: result.metadata\r\n            });\r\n          } else {\r\n            setError(result.error || 'Transcription failed');\r\n          }\r\n        } catch (error) {\r\n          console.error('Transcription error:', error);\r\n          setError('Failed to transcribe audio. Please try again.');\r\n        } finally {\r\n          setIsProcessing(false);\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Audio processing error:', error);\r\n      setError('Failed to process audio. Please try again.');\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getAudioLevelColor = () => {\r\n    if (audioLevel < 30) return 'bg-green-500';\r\n    if (audioLevel < 70) return 'bg-yellow-500';\r\n    return 'bg-red-500';\r\n  };\r\n\r\n  return (\r\n    <div className=\"voice-input-container\">\r\n      {/* Voice Input Button */}\r\n      <div className=\"flex items-center gap-4 p-4 bg-white dark:bg-slate-800 rounded-lg border border-slate-200 dark:border-slate-700 shadow-sm\">\r\n        <button\r\n          onClick={isRecording ? stopRecording : startRecording}\r\n          disabled={disabled || isLoading || isProcessing}\r\n          className={`\r\n            relative p-4 rounded-full transition-all duration-200 transform\r\n            ${isRecording \r\n              ? 'bg-red-500 hover:bg-red-600 scale-110 animate-pulse' \r\n              : 'bg-blue-500 hover:bg-blue-600 hover:scale-105'\r\n            }\r\n            ${(disabled || isLoading || isProcessing) \r\n              ? 'opacity-50 cursor-not-allowed' \r\n              : 'cursor-pointer'\r\n            }\r\n            text-white shadow-lg hover:shadow-xl\r\n          `}\r\n        >\r\n          {isRecording ? (\r\n            <MicOff size={24} />\r\n          ) : isProcessing ? (\r\n            <div className=\"animate-spin w-6 h-6 border-2 border-white border-t-transparent rounded-full\" />\r\n          ) : (\r\n            <Mic size={24} />\r\n          )}\r\n        </button>\r\n\r\n        {/* Recording Status */}\r\n        <div className=\"flex-1\">\r\n          {isRecording && (\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"w-2 h-2 bg-red-500 rounded-full animate-pulse\" />\r\n                <span className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\r\n                  Recording: {formatTime(recordingTime)}\r\n                </span>\r\n              </div>\r\n              \r\n              {/* Audio Level Indicator */}\r\n              <div className=\"flex items-center gap-2\">\r\n                <VolumeX size={16} className=\"text-slate-400\" />\r\n                <div className=\"flex-1 h-2 bg-slate-200 dark:bg-slate-600 rounded-full overflow-hidden\">\r\n                  <div \r\n                    className={`h-full transition-all duration-100 ${getAudioLevelColor()}`}\r\n                    style={{ width: `${audioLevel}%` }}\r\n                  />\r\n                </div>\r\n                <Volume2 size={16} className=\"text-slate-400\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {isProcessing && (\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"animate-spin w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full\" />\r\n              <span className=\"text-sm text-slate-600 dark:text-slate-400\">\r\n                Processing audio...\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {!isRecording && !isProcessing && (\r\n            <p className=\"text-sm text-slate-600 dark:text-slate-400\">\r\n              Click the microphone to start voice input\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Settings Indicator */}\r\n        <div className=\"flex items-center gap-2 text-xs text-slate-500 dark:text-slate-400\">\r\n          <Settings size={16} />\r\n          <span>Enhanced with LJ Speech</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"mt-2 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\r\n          <p className=\"text-sm text-red-600 dark:text-red-400\">{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div className=\"mt-2 text-xs text-slate-500 dark:text-slate-400\">\r\n        <p>• Speak clearly and at normal volume</p>\r\n        <p>• Enhanced with 13,101 speech training samples</p>\r\n        <p>• Automatic noise reduction and smart formatting</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}